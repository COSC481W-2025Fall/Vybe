name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20'
  PYTHON_VERSION: '3.11'

jobs:
  # Run all tests
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      # Frontend tests
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'apps/web/package-lock.json'
          
      - name: Install frontend dependencies
        working-directory: ./apps/web
        run: npm ci
        
      - name: Run frontend tests
        working-directory: ./apps/web
        run: npm test -- --run
        
      # Backend tests
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          
      - name: Run backend tests
        working-directory: ./backend
        run: pytest

  # Deployment Protection - Block Vercel if tests fail
  deployment-protection:
    name: Deployment Protection
    runs-on: ubuntu-latest
    needs: test
    if: failure()
    
    steps:
      - name: Block deployment on test failure
        run: |
          echo "‚ùå Tests failed - deployment should be blocked"
          echo "Please fix failing tests before deploying"
          exit 1